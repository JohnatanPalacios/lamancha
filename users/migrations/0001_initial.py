# Generated by Django 3.1.2 on 2020-11-11 01:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, verbose_name='Número de la Tarjeta')),
                ('nameInCard', models.CharField(max_length=150, verbose_name='Nombre en Tarjeta')),
                ('month_expiration', models.CharField(blank=True, max_length=2, null=True, verbose_name='Mes de expiración')),
                ('day_expiration', models.CharField(blank=True, max_length=2, null=True, verbose_name='Día de Expiración')),
            ],
            options={
                'verbose_name': 'Tarjeta de Crédito',
                'verbose_name_plural': 'Tarjetas de Crédito',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DebitCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, verbose_name='Número de la Tarjeta')),
                ('nameInCard', models.CharField(max_length=150, verbose_name='Nombre en Tarjeta')),
            ],
            options={
                'verbose_name': 'Tarjeta Débito',
                'verbose_name_plural': 'Tarjetas Débito',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LiteraryGenders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Género literario',
                'verbose_name_plural': 'Géneros literarios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='DNI')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='customer/photos')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Dirección')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('gender', models.CharField(blank=True, choices=[('femenino', 'Femenino'), ('masculino', 'Masculino'), ('otro', 'Otro')], max_length=10, null=True, verbose_name='Género')),
                ('news', models.BooleanField(blank=True, default=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('creditCards', models.ManyToManyField(to='users.CreditCard', verbose_name='Tarjetas de crédito')),
                ('debitCards', models.ManyToManyField(to='users.DebitCard', verbose_name='Tarjetas de débito')),
                ('favoriteGenres', models.ManyToManyField(to='users.LiteraryGenders', verbose_name='Preferencias literarias')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
